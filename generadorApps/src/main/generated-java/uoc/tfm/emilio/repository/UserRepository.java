/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-backend-jpa:src/main/java/repository/Repository.e.vm.java
 * Template is part of Open Source Project: https://github.com/jaxio/pack-backend-jpa
 */
package uoc.tfm.emilio.repository;

import javax.inject.Named;
import javax.inject.Singleton;

import org.springframework.transaction.annotation.Transactional;

import com.jaxio.jpa.querybyexample.GenericRepository;

import uoc.tfm.emilio.domain.User;

/**
 * {@link GenericRepository} for {@link User} 
 */
@Named
@Singleton
public class UserRepository extends GenericRepository<User, Integer> {

    public UserRepository() {
        super(User.class);
    }

    @Override
    public User getNew() {
        return new User();
    }

    @Override
    public User getNewWithDefaults() {
        return getNew().withDefaults();
    }

    /**
     * Return the persistent instance of {@link User} with the given unique property value username,
     * or null if there is no such persistent instance.
     *
     * @param username the unique value
     * @return the corresponding {@link User} persistent instance or null
     */
    @Transactional(readOnly = true)
    public User getByUsername(String username) {
        return findUniqueOrNone(new User().username(username));
    }

    /**
     * Delete a {@link User} using the unique column username
     *
     * @param username the unique value
     */
    @Transactional
    public void deleteByUsername(String username) {
        delete(getByUsername(username));
    }
}